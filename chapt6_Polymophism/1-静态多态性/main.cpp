/*-------------------------------------
 * 功能: 类的静态多态性(函数重载+运算符重载)
 * 作者: tsingke
-------------------------------------*/


//静态多态: 函数重载(同名不同参) + 运算符重载(4种)

#include <iostream>
using namespace std;

#include "complex.h"


//--------------主函数---------------

int main()
{

    //定义复数类的对象
    complex a(6,6);
    complex b(8,8);
    complex c,d,e;


    //1. 重载输出运算符<<, 输出大对象 (双目运算符)
    cout<<"a="<<a<<endl;
    cout<<"b="<<b<<endl;
    cout<<"c="<<c<<endl;



    //2. 重载加法运算符+ (双目运算符),
    c = a + b;//a.operator+(b);
    cout<<c;



    //3. 重载赋值运算符= (如果对象不涉及堆内存资源,不建议重载赋值运算符,使用系统提供的就可以)
    c = a;
    cout<<c<<endl;



    //4. 重载函数调用运算符()  (多目运算符)
    cout<<a()<<endl;//输出距离real^2 +imag^2;





    //5.1 重载后++, 对象a++(后加加)-(单目运算符)

    d=a++;
    cout<<"d=a++; d = "<<d<<endl;



    //5.2 重载前++,对象++b(前加加)-(单目运算符)
    e=++b;
    cout<<"e=++b; e = "<<e<<endl;




    return 0;
}
